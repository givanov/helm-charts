# Default values for dnsfilter-relay.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: dnsfilter/relay
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 6363
  annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  tcpSocket:
    port: 6363
readinessProbe:
  tcpSocket:
    port: 6363

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

podManagementPolicy: Parallel

volumeClaimTemplates: []
#  - metadata:
#      name: state
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: "my-storage-class"
#      resources:
#        requests:
#          storage: 1Gi

config:
  confFilePath: /relay.conf
  regFileLocation: /
  generateConfigSecret: true
  listenAddresses:
    - "0.0.0.0:6363"
  soReusePort: true
  upstreamOrder:
    - udp
    - tcp
    - tcp-tls
  pingUpstreamServers: false
  pingUpstreamServersInterval: 60s
  randomizeUpstreamServers: false
  udpPacketSize: 4096
  gdprSupport: false
  persistentTlsConnection: false
  persistentTLSConnectionSettings:
    max_fails: 5
    connection_expiry: 30s
    # one of: random, sequential, round-robin
    policy: "round-robin"
  log:
    level: info
    # one of: json or text
    format: json
  client:
    name: a
    secretKey: a
    registrationOverrideDns:
      enabled: false
      address: 103.247.36.36:53
      protocol: udp
      timeout: 5s
  localDnsServers:
    - addresses:
        - "1.1.1.1:53"
        - "8.8.8.8:53"
      localDomains:
        - "dnsfilter.com"
    - addresses:
        - "1.1.1.1:53"
        - "8.8.8.8:53"
      localDomains:
        - "dnsfilter.com"
  upstreamServers:
    - ipAddress: 103.247.36.36
      port: 53
      tcpReuse: "false"
      rwTimeout: "2s"
  tcpUpstreamServers:
    - authName: dns1.dnsfilter.com
      ipAddress: 103.247.36.36
      port: 853
      tcpReuse: "false"
      rwTimeout: "2s"
    - authName: dns2.dnsfilter.com
      ipAddress: 103.247.37.37
      port: 853
      tcpReuse: "false"
      rwTimeout: "2s"

extraManifests: []
# Default values for apcupsd-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/givanov/rpi_export
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

args:
  # Address of to listen on
  listenAddr: ":9090"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true

  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9090

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes:
  - name: vcio
    hostPath:
      path: /dev/vcio
      type: CharDevice

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: vcio
    mountPath: /dev/vcio
    readOnly: true

nodeSelector: {}

# Tolerate scheduling on master nodes as well as worker nodes
tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists

affinity: {}

# Enable this if you're using https://github.com/coreos/prometheus-operator
serviceMonitor:
  enabled: false
  # if namespace not provided it will use the namespace where the chart is deployed
  namespace:

  # Fallback to the prometheus default unless specified
  # interval: 10s

  # Fallback to the prometheus default unless specified
  # scrapeTimeout: 30s

  # sets a max number of metrics to scrape, if the pod has more metrics the scrape will fail
  sampleLimit: 2000

  ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
  additionalLabels: {}

  honorLabels: false

dashboards:
  enabled: false
  labels:
    grafana_dashboard: "1"